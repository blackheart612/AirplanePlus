PART
{ 

// --- general parameters ---
name = hueyprop
module = Part
author = blackheart612

// --- asset parameters ---
mesh = model.mu
rescaleFactor = 1.0

// --- node definitions ---

node_stack_top = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0

// --- FX definitions ---

//fx_exhaustLight_yellow = 0.0, -0.1, 0.0, 0.0, 0.0, 1.0, power
//fx_smokeTrail_light  = 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, power
//fx_exhaustSparks_flameout = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, flameout

// --- Sound FX definition ---

//sound_fspropstart.wav = engage
//sound_fspropidle.wav = power
//sound_jet_deep = running
//sound_vent_soft = disengage
//sound_explosion_low = flameout


// --- editor parameters ---
TechRequired = aerodynamicSystems
cost = 6000
entryCost = 2200
category = Engine
subcategory = 0
title = L K53 "Valkyrie" Turboshaft Engine
manufacturer = Kerbal Standard
description = The Valkyrie Turboshaft Engine is one of the salvaged parts from the oceans of the east. A good number of parts was found dumped to the see and brought back to be refurbished. This engine is unique in that it has a stabilizer on top paired with two huge blades, usually producing a chopping sound.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,1,1,1

// --- standard part parameters ---
mass = 0.55
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
breakingForce = 200
breakingTorque = 200
crashTolerance = 15
maxTemp = 3600
fuelCrossFeed = True
bulkheadProfiles = srf
tags = bell helicopter huey rotor vtol

MODULE

{
	
	name = FSengineBladed

	//Craft Load: <4.8t
	rotorHubName = shaft
	bladeHubName = blade	
	baseTransformName = baseReference
	tailRotor = false
	wingArea = 1.1
	maxRPM = 1000
	span = 1.615
	maxThrust = 50 // doesn't mean anything in a bladed engine, except as a coefficient for fuel consumption
	
	
resources = LiquidFuel,1;IntakeAir,15
	
	fuelConsumption = 0,0.0001;1,0.001

	powerProduction = 280	
}

MODULE
{
	name = FSengineSounds
	engage = AirplanePlus/Sounds/rotor_startup
	power = AirplanePlus/Sounds/huey_idle
	disengage = AirplanePlus/Sounds/helicopter_stop
	flameout = AirplanePlus/Sounds/helicopter_stop
	powerPitchBase = 0.85
	thrustAddedToPitch = 0.15
	powerFadeInSpeed = 0.0025
	powerFadeInDelay = 0.2
	powerLowerThreshold = 0.0
	powerVolume = 1.0
	engageVolume = 1.0
	warningSoundThreshold = 0.8
	warningCooldownTime = 2.0
	randomStartDelay = 0.0 //for playing engines slightly out of sync
}
MODULE
{
	name = FSengineSounds
	engage = AirplanePlus/Sounds/turbine_startup
	power = AirplanePlus/Sounds/turbine_idle
	powerPitchBase = 0.75
	thrustAddedToPitch = 0.15
	powerFadeInSpeed = 0.0025
	powerFadeInDelay = 0.1
	powerLowerThreshold = 0.0
	powerVolume = 0.5
	engageVolume = 1.0
	warningSoundThreshold = 0.8
	warningCooldownTime = 2.0
	randomStartDelay = 0.0 //for playing engines slightly out of sync
}
MODULE
{
	name = FSengineSounds
	engage = AirplanePlus/Sounds/rotor_click
	power = AirplanePlus/Sounds/rotor_idle
	powerPitchBase = 0.75
	thrustAddedToPitch = 0.15
	powerFadeInSpeed = 0.0025
	powerFadeInDelay = 0.5
	powerLowerThreshold = 0.0
	powerVolume = 0.5
	engageVolume = 1.0
	warningSoundThreshold = 0.8
	warningCooldownTime = 2.0
	randomStartDelay = 0.0 //for playing engines slightly out of sync
}
MODULE
        {
            name = ModuleSurfaceFX //I don't even know how this works
            thrustProviderModuleIndex = 0
            fxMax = 0.1
            maxDistance = 20
            falloff = 1
            thrustTransformName = thrustTransform
        }
	

MODULE
{
	name = FSalternator
	resourceName = ElectricCharge
	chargeRate = 0.01
}

MODULE
{
	name = FSplanePropellerSpinner
	propellerName = mainrotor
	//duplicatedBlades = true
	rotationSpeed = -400
	windmillRPM = 0.1
	spinUpTime = 1.0
	useRotorDiscSwap = 1
	rotorDiscFadeInStart = 0.55
	rotorDiscFadeInEnd = 0.95
	rotorDiscSpeed = -400
	rotorDiscName = disc
	blade1 = blade1
	blade2 = blade2
	blade3 = rods
}

//MODULE
// {
	// name = FSswitchEngineThrustTransform
	// defaultTTName = thrustTransform
	// alternateTTName = alternateThrustTransform
	// useNamedAlternate = 0
// }

//MODULE
// {
	// name = FSengineHandCrank
// }
	
MODULE
{
 name = FSmeshSwitch
 moduleID = 0
 buttonName = Next
 previousButtonName = Previous
 objectDisplayNames = Engine'd;Engineless
 objects = base, engine, blade1, blade2, shaft, rods;base, blade1, blade2, shaft, rods
 updateSymmetry = true
}
// PART END
}